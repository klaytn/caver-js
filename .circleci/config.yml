version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: kjhman21/node:10.15.3-mocha

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: npm install
      - run: npm test

  tag_verify:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "verify tag and file verison match"
          command: |
            echo "tag version is " $CIRCLE_TAG

            file_version=v$(.circleci/version.sh)
            echo "file version is " $file_version

            if [ $file_version == ${CIRCLE_TAG%-*} ]; then
              echo "verification pass"
            else
              echo "It's not same version."
              exit 1
            fi

  rc_publish:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints: 
            - "8e:dd:d4:ac:05:3f:10:da:24:23:e3:a8:b0:10:a8:ba"     
      - checkout
      - run:
          name: "Authenticate with registry"
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN > ~/repo/.npmrc"
      - run:
          name: "Publish package with tag rc"
          command: echo "npm publish --tag rc" #remove " when its ready
      - run:
          name: "push to release branch"
          command: |
            echo "Publishing a release candidate! version=$CIRCLE_TAG"

            git checkout -b release/${CIRCLE_TAG%-*}
            git push origin release/${CIRCLE_TAG%-*}

  major_publish:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints: 
            - "8e:dd:d4:ac:05:3f:10:da:24:23:e3:a8:b0:10:a8:ba"     
      - checkout
      - run:
          name: "Generate tag"
          command: |
              current_version=$(.circleci/version.sh)

              echo "git tag v$current_version"
              git tag v$current_version
              git push origin v$current_version
      - run:
          name: "Authenticate with registry"
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN > ~/repo/.npmrc"
      - run:
          name: "publish major version and delete release branch"
          command: |
              version=$(git log --pretty=format:"%s" -1 | grep -o "v[0-9].\+")
              echo "Publishing a major release! version=$version"
              echo "npm publish" #remove " when its ready

              #delete release branch. it trigger by merge title
              echo "Delete branch release/${version%-*}"
              git push origin --delete release/${version%-*}

workflows:
  workflow_commit:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - /release\/.*/
                - master

  workflow_publish:
    jobs:
      - tag_verify:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-.*/
            branches:
              ignore: /.*/

      - rc_publish:
          requires:
            - tag_verify
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+-.*/
            branches:
              ignore: /.*/

      - major_publish:
          filters:
            branches:
              only: master

